version: '3.8'

services:

  db:
    image: postgres:14
    container_name: foodgram-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    restart: always
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
    env_file:
      - .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
    volumes:
      - ../frontend/result_build:/app/result_build

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../frontend/result_build:/usr/share/nginx/html/:ro
      - static:/static:ro
      - media:/media:ro
      - ../docs/:/usr/share/nginx/html/api/docs/:ro
    depends_on:
      - backend
      - frontend

volumes:
  static:
  media:
  postgres_data:








